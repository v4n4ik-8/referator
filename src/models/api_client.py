import requests
import json
import time
from typing import Optional
from config import TOGETHER_API_KEY


class APIError(Exception):
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –æ—à–∏–±–æ–∫ API"""
    def __init__(self, message: str, user_message: str):
        self.message = message
        self.user_message = user_message
        super().__init__(self.message)


class RateLimitError(APIError):
    """–û—à–∏–±–∫–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤"""
    def __init__(self):
        super().__init__(
            "Rate limit exceeded",
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤. ü•∫\n\n"
            "–≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –Ω–∞—à —Å–µ—Ä–≤–∏—Å —Å–µ–π—á–∞—Å –æ—á–µ–Ω—å –ø–æ–ø—É–ª—è—Ä–µ–Ω!\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ 5-10 –º–∏–Ω—É—Ç.\n\n"
            "–ï—Å–ª–∏ –≤—ã —á–∞—Å—Ç–æ —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç–µ—Å—å —Å —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º–æ–π, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç, "
            "—á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —É–≤–µ–ª–∏—á–∏—Ç—å –ª–∏–º–∏—Ç—ã. üíù"
        )


class NetworkError(APIError):
    """–û—à–∏–±–∫–∞ —Å–µ—Ç–∏"""
    def __init__(self):
        super().__init__(
            "Network error",
            "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–∏—Å—É. üåê\n\n"
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n"
            "–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–∞—à —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
        )


class APIResponseError(APIError):
    """–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ API"""
    def __init__(self, status_code: int):
        messages = {
            401: "–û–π! –ü–æ—Ö–æ–∂–µ, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π. üîë\n"
                 "–ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!",
            403: "–î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å—É –≤—Ä–µ–º–µ–Ω–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω. üö´\n"
                 "–ú—ã —É–∂–µ —Ä–∞–∑–±–∏—Ä–∞–µ–º—Å—è —Å —ç—Ç–∏–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.",
            500: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. üîß\n\n"
                 "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
                 "‚Ä¢ –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∏–ª–∏ —Å–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å\n"
                 "‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–∏—Å–æ–º\n"
                 "‚Ä¢ –ü—Ä–µ–≤—ã—à–µ–Ω—ã –ª–∏–º–∏—Ç—ã –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é\n\n"
                 "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
                 "1. –£–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤\n"
                 "2. –£–ø—Ä–æ—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É —Ç–µ–º—ã\n"
                 "3. –ü–æ–¥–æ–∂–¥–∞—Ç—å –ø–æ–∫–∞ —Ä–∞–∑—Ä–∞–± –Ω–µ –ø–æ—Ñ–∏–∫—Å–∏—Ç\n"
                 "4. –ü–µ—Ä–µ–∑–∞–π—Ç–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É –∑–∞–≤—Ç—Ä–∞.",
            502: "–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. ‚ö°\n"
                 "–ü–µ—Ä–µ–∑–∞–π–¥–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É —á–µ—Ä–µ–∑ –ø–∞—Ä—É –º–∏–Ω—É—Ç.",
            503: "–°–µ—Ä–≤–∏—Å –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω. üèÉ\n"
                 "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–∏—à—É—Ç —Ä–µ—Ñ–µ—Ä–∞—Ç—ã –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ! "
                 "–ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.",
            504: "–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. ‚è≥\n"
                 "–í–æ–∑–º–æ–∂–Ω–æ, –∑–∞–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω—ã–π. –ü–æ–ø—Ä–æ–±—É–π —É–º–µ–Ω—å—à–∏—Ç—å –æ–±—ä—ë–º —Ç–µ–∫—Å—Ç–∞."
        }
        super().__init__(
            f"API error: {status_code}",
            messages.get(status_code, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. üò¢\n"
                                      "–ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –µ—ë —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ–º.")
        )


class APIClient:
    def __init__(self, base_delay: int = 5, max_retries: int = 3):
        self.base_delay = base_delay
        self.max_retries = max_retries
        self.api_key = TOGETHER_API_KEY
        self.base_url = "https://api.together.xyz/v1/chat/completions"
        self.model = "meta-llama/Llama-3-70b-chat-hf"
        self.headers = {
            "Authorization": f"Bearer {self.api_key}",
            "Content-Type": "application/json"
        }

    def make_request(self, prompt: str, attempt: int = 0) -> Optional[str]:
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ Together.ai —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏"""
        data = {
            "model": self.model,
            "messages": [
                {"role": "user", "content": prompt}
            ],
            "max_tokens": 1024,
            "temperature": 0.7,
            "top_p": 0.9,
        }

        try:
            response = requests.post(
                url=self.base_url,
                headers=self.headers,
                data=json.dumps(data),
                timeout=30
            )

            if response.status_code == 200:
                result = response.json()
                if 'choices' in result and len(result['choices']) > 0:
                    return result['choices'][0]['message']['content']
                else:
                    raise APIResponseError(500)

            elif response.status_code == 429:
                if attempt < self.max_retries:
                    delay = self.base_delay * (2 ** attempt)
                    time.sleep(delay)
                    return self.make_request(prompt, attempt + 1)
                raise RateLimitError()

            else:
                raise APIResponseError(response.status_code)

        except requests.exceptions.RequestException:
            if attempt < self.max_retries:
                delay = self.base_delay * (2 ** attempt)
                time.sleep(delay)
                return self.make_request(prompt, attempt + 1)
            raise NetworkError()

        except Exception:
            if attempt < self.max_retries:
                delay = self.base_delay * (2 ** attempt)
                time.sleep(delay)
                return self.make_request(prompt, attempt + 1)
            raise APIResponseError(500)

    def get_essay_structure(self, topic: str, num_chapters: int, language: str = "–†—É—Å—Å–∫–∏–π") -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ä–µ—Ñ–µ—Ä–∞—Ç–∞"""
        prompt = f"""–°–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ä–µ—Ñ–µ—Ä–∞—Ç–∞ –Ω–∞ —Ç–µ–º—É "{topic}".

                        –Ø–∑—ã–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {language}

                        –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ –≤–∫–ª—é—á–∞—Ç—å:
                        1. –í–≤–µ–¥–µ–Ω–∏–µ
                        2. {num_chapters} –≥–ª–∞–≤(—ã) - –∫–∞–∂–¥–∞—è –¥–æ–ª–∂–Ω–∞ —Ä–∞—Å–∫—Ä—ã–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –∞—Å–ø–µ–∫—Ç —Ç–µ–º—ã

                        –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
                        - –ì–ª–∞–≤—ã –¥–æ–ª–∂–Ω—ã –∏–¥—Ç–∏ –≤ –ª–æ–≥–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ
                        - –ö–∞–∂–¥–∞—è –≥–ª–∞–≤–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å —á–µ—Ç–∫—É—é —Å–≤—è–∑—å —Å —Ç–µ–º–æ–π
                        - –ù–∞–∑–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞—É—á–Ω—ã–º–∏ –∏ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–º–∏
                        - –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤

                        –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ - –ø—Ä–æ—Å—Ç–æ —Å–ø–∏—Å–æ–∫:
                        –í–≤–µ–¥–µ–Ω–∏–µ
                        –ì–ª–∞–≤–∞ 1. [–ù–∞–∑–≤–∞–Ω–∏–µ]
                        –ì–ª–∞–≤–∞ 2. [–ù–∞–∑–≤–∞–Ω–∏–µ]
                        ..."""

        return self.make_request(prompt)

    def generate_section_content(self, topic: str, section_name: str, symbols_per_chapter: int, language: str = "–†—É—Å—Å–∫–∏–π") -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–∞–∑–¥–µ–ª–∞"""
        if "–í–≤–µ–¥–µ–Ω–∏–µ" in section_name:
            prompt = f"""–ù–∞–ø–∏—à–∏ –≤–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞—Ç–∞ –Ω–∞ —Ç–µ–º—É "{topic}".

                        –Ø–∑—ã–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {language}

                        –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
                        - –û–±—ä—ë–º –ø—Ä–∏–º–µ—Ä–Ω–æ 2000 —Å–∏–º–≤–æ–ª–æ–≤
                        - –î–æ–ª–∂–Ω–æ –≤–∫–ª—é—á–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å —Ç–µ–º—ã
                        - –î–æ–ª–∂–Ω–æ –æ–ø–∏—Å—ã–≤–∞—Ç—å —Ü–µ–ª—å –∏ –∑–∞–¥–∞—á–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
                        - –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—É—á–Ω—ã–º –∏ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–º
                        - –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ü–∏—Ç–∞—Ç—ã –∏–ª–∏ —Å—Å—ã–ª–∫–∏
                        - –ù–µ –¥–æ–±–∞–≤–ª—è–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ "–í–≤–µ–¥–µ–Ω–∏–µ" –≤ –Ω–∞—á–∞–ª–æ —Ç–µ–∫—Å—Ç–∞"""
        else:
            prompt = f"""–ù–∞–ø–∏—à–∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–ª—è –≥–ª–∞–≤—ã "{section_name}" —Ä–µ—Ñ–µ—Ä–∞—Ç–∞ –Ω–∞ —Ç–µ–º—É "{topic}".

                        –Ø–∑—ã–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {language}

                        –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
                        - –û–±—ä—ë–º –ø—Ä–∏–º–µ—Ä–Ω–æ {symbols_per_chapter} —Å–∏–º–≤–æ–ª–æ–≤
                        - –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—É—á–Ω—ã–º –∏ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–º
                        - –†–∞—Å–∫—Ä–æ–π —Ç–µ–º—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–ª–Ω–æ
                        - –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ü–∏—Ç–∞—Ç—ã –∏–ª–∏ —Å—Å—ã–ª–∫–∏
                        - –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–ª–∞–≤—ã –≤ –Ω–∞—á–∞–ª–æ —Ç–µ–∫—Å—Ç–∞"""

        return self.make_request(prompt)
